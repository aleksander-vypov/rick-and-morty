{"ast":null,"code":"var _jsxFileName = \"/Users/aleksander/Documents/portfolio/rick-and-morty/src/components/AppContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppCtx = /*#__PURE__*/createContext(null);\nconst AppContext = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [characters, setCharacters] = useState([]);\n  const [info, setInfo] = useState();\n  const [character, setDetailInfo] = useState(null);\n  const [error, setError] = useState('');\n  const [active, setActive] = useState(1);\n  const sampleAppContext = {\n    name: 'Using React Context in a Typescript App',\n    author: 'thehappybug',\n    url: 'http://www.example.com'\n  };\n  return /*#__PURE__*/_jsxDEV(AppCtx.Provider, {\n    value: sampleAppContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_s(AppContext, \"KZXwIVdafXrDnU+3e/VKU0vVT2g=\");\n_c = AppContext;\nexport default AppContext;\nexport { AppCtx };\nvar _c;\n$RefreshReg$(_c, \"AppContext\");","map":{"version":3,"names":["React","createContext","useState","AppCtx","AppContext","children","characters","setCharacters","info","setInfo","character","setDetailInfo","error","setError","active","setActive","sampleAppContext","name","author","url"],"sources":["/Users/aleksander/Documents/portfolio/rick-and-morty/src/components/AppContext.tsx"],"sourcesContent":["import React, { createContext, FC, useState, useEffect } from 'react';\n\ninterface IAppContext {\n  children: React.ReactNode;\n}\n\ninterface AppContextInterface {\n  name: string;\n  author: string;\n  url: string;\n}\nconst AppCtx = createContext<AppContextInterface | null>(null);\n\nconst AppContext: FC<IAppContext> = ({ children }) => {\n  const [characters, setCharacters] = useState<ICharacter[]>([]);\n  const [info, setInfo] = useState<IPaginationInfo>();\n  const [character, setDetailInfo] = useState<ICharacter | null>(null);\n  const [error, setError] = useState<string>('');\n  const [active, setActive] = useState<number>(1);\n\n  const sampleAppContext: AppContextInterface = {\n    name: 'Using React Context in a Typescript App',\n    author: 'thehappybug',\n    url: 'http://www.example.com',\n  };\n\n  return <AppCtx.Provider value={sampleAppContext}>{children}</AppCtx.Provider>;\n};\n\nexport default AppContext;\nexport { AppCtx };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAMC,QAAQ,QAAmB,OAAO;AAAC;AAWtE,MAAMC,MAAM,gBAAGF,aAAa,CAA6B,IAAI,CAAC;AAE9D,MAAMG,UAA2B,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC/C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAe,EAAE,CAAC;EAC9D,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,EAAmB;EACnD,MAAM,CAACQ,SAAS,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAoB,IAAI,CAAC;EACpE,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAS,CAAC,CAAC;EAE/C,MAAMc,gBAAqC,GAAG;IAC5CC,IAAI,EAAE,yCAAyC;IAC/CC,MAAM,EAAE,aAAa;IACrBC,GAAG,EAAE;EACP,CAAC;EAED,oBAAO,QAAC,MAAM,CAAC,QAAQ;IAAC,KAAK,EAAEH,gBAAiB;IAAA,UAAEX;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAmB;AAC/E,CAAC;AAAC,GAdID,UAA2B;AAAA,KAA3BA,UAA2B;AAgBjC,eAAeA,UAAU;AACzB,SAASD,MAAM;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}