{"ast":null,"code":"var _jsxFileName = \"/Users/aleksander/Documents/portfolio/rick-and-morty/src/components/Pagination.tsx\";\nimport React from 'react';\nimport './styles/pagination.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allPages = (start, end, pageType, url) => {\n  let res = [];\n  for (let i = start, j = 1; i <= end; i += 1, j += 1) {\n    const newUrl = url.replace(/\\d+/g, String(i)).replace(/\\/\\w+\\/\\?/, `/${pageType}?`);\n    res.push({\n      url: newUrl,\n      num: i\n    });\n  }\n  return res;\n};\nconst Pagination = _ref => {\n  var _all;\n  let {\n    info,\n    getPage,\n    active,\n    setActive\n  } = _ref;\n  let all;\n  if (info) {\n    let start;\n    let end;\n    if (window.innerWidth < 768) {\n      start = active - 3 > 0 && info.pages > 20 ? active - 2 : 1;\n      end = active + 3 < info.pages ? active + 3 : info.pages;\n    } else {\n      start = active - 10 > 0 && info.pages > 20 ? active - 10 : 1;\n      end = active + 10 < info.pages ? active + 10 : info.pages;\n    }\n    let url;\n    if (typeof info.next === 'string') {\n      url = String(info.next);\n    } else {\n      url = String(info.prev);\n    }\n    all = allPages(start, end, 'character', url);\n  }\n  const onClickHandler = (url, num) => {\n    getPage(url);\n    setActive(num);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: (_all = all) === null || _all === void 0 ? void 0 : _all.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: active === el.num ? 'active' : undefined,\n      onClick: () => onClickHandler(el.url, el.num),\n      children: el.num\n    }, el.num, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","allPages","start","end","pageType","url","res","i","j","newUrl","replace","String","push","num","Pagination","info","getPage","active","setActive","all","window","innerWidth","pages","next","prev","onClickHandler","map","el","undefined"],"sources":["/Users/aleksander/Documents/portfolio/rick-and-morty/src/components/Pagination.tsx"],"sourcesContent":["import React, { FC, useState } from 'react';\nimport { IPaginationInfo } from '../types/types';\nimport './styles/pagination.scss';\n\ninterface Info {\n  info: IPaginationInfo | undefined;\n  getPage: (url: string) => void;\n  active: number;\n  setActive: (num: number) => void;\n}\n\nconst allPages = (\n  start: number,\n  end: number,\n  pageType: string,\n  url: string\n) => {\n  let res = [];\n  for (let i = start, j = 1; i <= end; i += 1, j += 1) {\n    const newUrl = url\n      .replace(/\\d+/g, String(i))\n      .replace(/\\/\\w+\\/\\?/, `/${pageType}?`);\n\n    res.push({\n      url: newUrl,\n      num: i,\n    });\n  }\n  return res;\n};\n\nconst Pagination: FC<Info> = ({ info, getPage, active, setActive }) => {\n  let all;\n  if (info) {\n    let start;\n    let end;\n\n    if (window.innerWidth < 768) {\n      start = active - 3 > 0 && info.pages > 20 ? active - 2 : 1;\n      end = active + 3 < info.pages ? active + 3 : info.pages;\n    } else {\n      start = active - 10 > 0 && info.pages > 20 ? active - 10 : 1;\n      end = active + 10 < info.pages ? active + 10 : info.pages;\n    }\n\n    let url;\n    if (typeof info.next === 'string') {\n      url = String(info.next);\n    } else {\n      url = String(info.prev);\n    }\n    all = allPages(start, end, 'character', url);\n  }\n\n  const onClickHandler = (url: string, num: number) => {\n    getPage(url);\n    setActive(num);\n  };\n\n  return (\n    <div className=\"container\">\n      {all?.map((el) => (\n        <div\n          className={active === el.num ? 'active' : undefined}\n          key={el.num}\n          onClick={() => onClickHandler(el.url, el.num)}\n        >\n          {el.num}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Pagination;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAwB,OAAO;AAE3C,OAAO,0BAA0B;AAAC;AASlC,MAAMC,QAAQ,GAAG,CACfC,KAAa,EACbC,GAAW,EACXC,QAAgB,EAChBC,GAAW,KACR;EACH,IAAIC,GAAG,GAAG,EAAE;EACZ,KAAK,IAAIC,CAAC,GAAGL,KAAK,EAAEM,CAAC,GAAG,CAAC,EAAED,CAAC,IAAIJ,GAAG,EAAEI,CAAC,IAAI,CAAC,EAAEC,CAAC,IAAI,CAAC,EAAE;IACnD,MAAMC,MAAM,GAAGJ,GAAG,CACfK,OAAO,CAAC,MAAM,EAAEC,MAAM,CAACJ,CAAC,CAAC,CAAC,CAC1BG,OAAO,CAAC,WAAW,EAAG,IAAGN,QAAS,GAAE,CAAC;IAExCE,GAAG,CAACM,IAAI,CAAC;MACPP,GAAG,EAAEI,MAAM;MACXI,GAAG,EAAEN;IACP,CAAC,CAAC;EACJ;EACA,OAAOD,GAAG;AACZ,CAAC;AAED,MAAMQ,UAAoB,GAAG,QAA0C;EAAA;EAAA,IAAzC;IAAEC,IAAI;IAAEC,OAAO;IAAEC,MAAM;IAAEC;EAAU,CAAC;EAChE,IAAIC,GAAG;EACP,IAAIJ,IAAI,EAAE;IACR,IAAIb,KAAK;IACT,IAAIC,GAAG;IAEP,IAAIiB,MAAM,CAACC,UAAU,GAAG,GAAG,EAAE;MAC3BnB,KAAK,GAAGe,MAAM,GAAG,CAAC,GAAG,CAAC,IAAIF,IAAI,CAACO,KAAK,GAAG,EAAE,GAAGL,MAAM,GAAG,CAAC,GAAG,CAAC;MAC1Dd,GAAG,GAAGc,MAAM,GAAG,CAAC,GAAGF,IAAI,CAACO,KAAK,GAAGL,MAAM,GAAG,CAAC,GAAGF,IAAI,CAACO,KAAK;IACzD,CAAC,MAAM;MACLpB,KAAK,GAAGe,MAAM,GAAG,EAAE,GAAG,CAAC,IAAIF,IAAI,CAACO,KAAK,GAAG,EAAE,GAAGL,MAAM,GAAG,EAAE,GAAG,CAAC;MAC5Dd,GAAG,GAAGc,MAAM,GAAG,EAAE,GAAGF,IAAI,CAACO,KAAK,GAAGL,MAAM,GAAG,EAAE,GAAGF,IAAI,CAACO,KAAK;IAC3D;IAEA,IAAIjB,GAAG;IACP,IAAI,OAAOU,IAAI,CAACQ,IAAI,KAAK,QAAQ,EAAE;MACjClB,GAAG,GAAGM,MAAM,CAACI,IAAI,CAACQ,IAAI,CAAC;IACzB,CAAC,MAAM;MACLlB,GAAG,GAAGM,MAAM,CAACI,IAAI,CAACS,IAAI,CAAC;IACzB;IACAL,GAAG,GAAGlB,QAAQ,CAACC,KAAK,EAAEC,GAAG,EAAE,WAAW,EAAEE,GAAG,CAAC;EAC9C;EAEA,MAAMoB,cAAc,GAAG,CAACpB,GAAW,EAAEQ,GAAW,KAAK;IACnDG,OAAO,CAACX,GAAG,CAAC;IACZa,SAAS,CAACL,GAAG,CAAC;EAChB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,kBACvBM,GAAG,yCAAH,KAAKO,GAAG,CAAEC,EAAE,iBACX;MACE,SAAS,EAAEV,MAAM,KAAKU,EAAE,CAACd,GAAG,GAAG,QAAQ,GAAGe,SAAU;MAEpD,OAAO,EAAE,MAAMH,cAAc,CAACE,EAAE,CAACtB,GAAG,EAAEsB,EAAE,CAACd,GAAG,CAAE;MAAA,UAE7Cc,EAAE,CAACd;IAAG,GAHFc,EAAE,CAACd,GAAG;MAAA;MAAA;MAAA;IAAA,QAKd;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,KAzCIC,UAAoB;AA2C1B,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}