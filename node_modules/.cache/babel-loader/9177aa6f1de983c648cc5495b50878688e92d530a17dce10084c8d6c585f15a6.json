{"ast":null,"code":"var _jsxFileName = \"/Users/aleksander/Documents/portfolio/rick-and-morty/src/components/AppContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppCtx = /*#__PURE__*/createContext({\n  getPage: url => console.log(url)\n});\nconst AppContext = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [characters, setCharacters] = useState([]);\n  const [info, setInfo] = useState();\n  const [character, setDetailInfo] = useState(null);\n  const [error, setError] = useState('');\n  const [active, setActive] = useState(1);\n  const getPage = url => {\n    fetch(url).then(response => response.json()).then(data => {\n      if (data !== null && data !== void 0 && data.error) {\n        setError(data.error);\n      } else {\n        setError('');\n      }\n      setCharacters(data.results);\n      setInfo(data.info);\n    });\n  };\n  useEffect(() => {\n    getPage('https://rickandmortyapi.com/api/character');\n  }, []);\n  const sampleAppContext = {\n    characters,\n    setCharacters,\n    info,\n    setInfo,\n    character,\n    setDetailInfo,\n    error,\n    setError,\n    active,\n    setActive,\n    getPage\n  };\n  return /*#__PURE__*/_jsxDEV(AppCtx.Provider, {\n    value: sampleAppContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n};\n_s(AppContext, \"fwm+ppBc+XUgh2y9l4DVP5TujPg=\");\n_c = AppContext;\nexport default AppContext;\nexport { AppCtx };\nvar _c;\n$RefreshReg$(_c, \"AppContext\");","map":{"version":3,"names":["React","createContext","useState","useEffect","AppCtx","getPage","url","console","log","AppContext","children","characters","setCharacters","info","setInfo","character","setDetailInfo","error","setError","active","setActive","fetch","then","response","json","data","results","sampleAppContext"],"sources":["/Users/aleksander/Documents/portfolio/rick-and-morty/src/components/AppContext.tsx"],"sourcesContent":["import React, { createContext, FC, useState, useEffect } from 'react';\nimport { ICharacter, IPaginationInfo } from '../types/types';\n\ninterface IAppContext {\n  children: React.ReactNode;\n}\n\ninterface IAppContextInterface {\n  characters: ICharacter[];\n  setCharacters: (charArr: ICharacter[]) => void;\n  info: IPaginationInfo | undefined;\n  setInfo: (newInfo: IPaginationInfo) => void;\n  character: ICharacter | null;\n  setDetailInfo: (detail: ICharacter | null) => void;\n  error: string;\n  setError: (err: string) => void;\n  active: number;\n  setActive: (val: number) => void;\n  getPage: (ur: string) => void;\n}\nconst AppCtx = createContext<\n  IAppContextInterface | Partial<IAppContextInterface>\n>({ getPage: (url) => console.log(url) });\n\nconst AppContext: FC<IAppContext> = ({ children }) => {\n  const [characters, setCharacters] = useState<ICharacter[]>([]);\n  const [info, setInfo] = useState<IPaginationInfo | undefined>();\n  const [character, setDetailInfo] = useState<ICharacter | null>(null);\n  const [error, setError] = useState<string>('');\n  const [active, setActive] = useState<number>(1);\n\n  const getPage = (url: string) => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data?.error) {\n          setError(data.error);\n        } else {\n          setError('');\n        }\n        setCharacters(data.results);\n        setInfo(data.info);\n      });\n  };\n\n  useEffect(() => {\n    getPage('https://rickandmortyapi.com/api/character');\n  }, []);\n\n  const sampleAppContext: IAppContextInterface = {\n    characters,\n    setCharacters,\n    info,\n    setInfo,\n    character,\n    setDetailInfo,\n    error,\n    setError,\n    active,\n    setActive,\n    getPage,\n  };\n\n  return <AppCtx.Provider value={sampleAppContext}>{children}</AppCtx.Provider>;\n};\n\nexport default AppContext;\nexport { AppCtx };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAMC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAoBtE,MAAMC,MAAM,gBAAGH,aAAa,CAE1B;EAAEI,OAAO,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG;AAAE,CAAC,CAAC;AAEzC,MAAMG,UAA2B,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC/C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAe,EAAE,CAAC;EAC9D,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,EAA+B;EAC/D,MAAM,CAACa,SAAS,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAoB,IAAI,CAAC;EACpE,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAS,CAAC,CAAC;EAE/C,MAAMG,OAAO,GAAIC,GAAW,IAAK;IAC/Be,KAAK,CAACf,GAAG,CAAC,CACPgB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAER,KAAK,EAAE;QACfC,QAAQ,CAACO,IAAI,CAACR,KAAK,CAAC;MACtB,CAAC,MAAM;QACLC,QAAQ,CAAC,EAAE,CAAC;MACd;MACAN,aAAa,CAACa,IAAI,CAACC,OAAO,CAAC;MAC3BZ,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdE,OAAO,CAAC,2CAA2C,CAAC;EACtD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMsB,gBAAsC,GAAG;IAC7ChB,UAAU;IACVC,aAAa;IACbC,IAAI;IACJC,OAAO;IACPC,SAAS;IACTC,aAAa;IACbC,KAAK;IACLC,QAAQ;IACRC,MAAM;IACNC,SAAS;IACTf;EACF,CAAC;EAED,oBAAO,QAAC,MAAM,CAAC,QAAQ;IAAC,KAAK,EAAEsB,gBAAiB;IAAA,UAAEjB;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAmB;AAC/E,CAAC;AAAC,GAxCID,UAA2B;AAAA,KAA3BA,UAA2B;AA0CjC,eAAeA,UAAU;AACzB,SAASL,MAAM;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}